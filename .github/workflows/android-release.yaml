name: Flutter build Android(r)

on:
  push:
    branches: [main, develop, release/*]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v2

      - name: restore signkey
        run: |
          echo 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM0VENDQWNtZ0F3SUJBZ0lVYjhsdEJFTVEzTFdEZnNnakIrcmExUjVMWGVzd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0FEQWVGdzB5TXpFeE16QXhORFUxTXpkYUZ3MHlNekV5TXpBeE5EVTFNemRhTUFBd2dnRWlNQTBHQ1NxRwpTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFESVA1eFIrZjdVQUxTV0dXN3dEaXg2RWEzZ0ZGWGF2Vy9aCnBINGVTNGFHSVFSMFpDaC85YlY3K1dNd0NPV1lFZHg0WDVMdTVnYzliWXlQVDFRMXFBYWtkOC9CU3BzeC93K3IKQ2Y2aUlxb3BhQWRHU3kwNmVOODhHMENSSFluRk5Neno3TnVLeFdDR2ZGUWJMdm9VMFRGUUVIblREbkZ0Q0ZMZApRMU5uR0pxU2Y1b2xXRm5aOFhQOUV4cVlBQzI0eEtFcjRKVTBWbDlQMnF3ZHVoZG5vMkpZTGwrbFc1eW5FYmxaCkpyOTFqbGJGYW5jeVBUU29zeCt6dnpLcnJHOTZYdzlHSnpxaFhod0UvVTREdnFRQmM5V1RiQjk4N0JpeVNtNWsKVzBUZkEvQzRhNkg5OWhKanJsMDkyaXRlZVdXWVQzQS8rbGtySmNMVjZXdFhGeVhDT3ZENUFnTUJBQUdqVXpCUgpNQjBHQTFVZERnUVdCQlNHaUc5Q3B3Ni90bmVHWTNDNjRWWHYwajJwc2pBZkJnTlZIU01FR0RBV2dCU0dpRzlDCnB3Ni90bmVHWTNDNjRWWHYwajJwc2pBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUEwR0NTcUdTSWIzRFFFQkN3VUEKQTRJQkFRQ2RrRzlhR2FQWW1CZGp0TVBBVFpnV3BlaU5Pb2d5SlFOU2c5TXFNR3JxRjlzRUVUNHJxYkJjbzNKRQplaHdxVytGMjVpODJJV2pGZWY0V291YnVMS05hUFZ5elRWSEU2VlhTdVlrVVp1Tlh6N3E5VnVFNVkzeXhpN2hmClJacjE1cFNQdE92dlJYRnpieUFxT0lpTzB1R3ZZbXhBUW9VN2ZGb3A0WXppQWdSQVd3NnF5Y1ZWQWJUR1R3bWUKVFJRVEswT3kxc1JVcEgxZ2pXYldCblVMUi9nZ0RPNVk2RjBIVVdlcXA0ZVFkMTU4bU5aZGNRSE1rTlI4d21HNwo4R2N5VmExWHBhTktya2tzQURwblpqMGQ4UldLWUJ6Y0ZVRS9HUlhwbWNVWERVMmdHdVcyYWhGZjZSdm0wVE5ZCkpnWm9jVndLaUpVYkwvQUdyV0JtRkRIU2JmRSsKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=' | base64 -d > public_key.pem
          cat public_key.pem
          echo "${{ secrets.SIGNING_KEY}}" > SIGNING_KEY

          openssl smime -encrypt -aes256 -in SIGNING_KEY -binary -outform DEM -out SIGNING_KEY.enc public_key.pem
          cat SIGNING_KEY.enc | base64

      - name: Set up ssh
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_ID_ED25519 }}" | base64 -d > ~/.ssh/id_ed25519
          chmod 700 ~/.ssh/id_ed25519
          eval $(ssh-agent -s)
          echo "Host github.com \n\tIdentityFile ~/.ssh/id_ed25519\n\tUser git\n\tIdentityiesOnly yes" >> ~/.ssh/config
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts

      - uses: pocket-apps/action-setup-firebase@v2
        with:
          firebase-token: ${{ secrets.FIREBASE_TOKEN }}

      # https://github.com/kuhnroyal/flutter-fvm-config-action
      - name: Fetch flutter config
        uses: kuhnroyal/flutter-fvm-config-action@v1

      # https://github.com/subosito/flutter-action
      - name: Set up flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true
          cache-key: ${{ env.FLUTTER_VERSION }}-${{ env.FLUTTER_CHANNEL }}

      - name: Flutter version
        run: flutter --version

      - name: Cache pubspec dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.FLUTTER_HOME }}/.pub-cache
            **/.packages
            **/.flutter-plugins
            **/.flutter-plugin-dependencies
            **/.dart_tool/package_config.json
          key: build-pubspec-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: build-pubspec-

      - name: Cache build runner
        uses: actions/cache@v2
        with:
          path: |
            **/.dart_tool/build
          key: build-runner-${{ hashFiles('**/asset_graph.json') }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: build-runner-

      - name: Install Melos
        uses: bluefireteam/melos-action@v2

      - name: Flutter dependencies install
        run: flutter pub get

      - name: build_runner
        run: |
          echo '${{ secrets.ENV }}' | base64 -d > .env
          melos generate

      - name: Accept Android License
        run: yes | flutter doctor --android-licenses

      - name: Build apk
        run: |
          echo '${{ secrets.SIGNING_KEY }}' | base64 -d > android/app/key.jks
          echo '${{ secrets.FIREBASE_ANDROID }}' | base64 -d > android/app/google-services.json
          flutter build appbundle --release
          flutter build apk --release
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          ALIAS: ${{ secrets.ALIAS }}
          KEY_PATH: key.jks

      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      #-- Slack通知 --#
      # 成功
      - name: Slack Notification on Success
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: Deploy Success
          SLACK_COLOR: good
          SLACK_ICON: https://raw.githubusercontent.com/EQMonitor/EQMonitor/main/assets/icon.png
          SLACK_USERNAME: EQMonitor
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

      # 失敗
      - name: Slack Notification on Failure
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: Deploy Failure
          SLACK_COLOR: danger
          SLACK_ICON: https://raw.githubusercontent.com/EQMonitor/EQMonitor/main/assets/icon.png
          SLACK_USERNAME: EQMonitor
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
